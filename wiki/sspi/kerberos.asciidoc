ifdef::env-github[]
:note-caption: :pencil2:
endif::[]

= Kerberos
:toc: macro

The kerberos authentication package (AP) supports domain logons.
It is also the security package (SP) for Microsoft kerberos v1.0 authentication on a network.

toc::[]

== Functions

The protocol messages that kerberos supports is partially documented on MSDNfootnote:[https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-kerb_protocol_message_type[KERB_PROTOCOL_MESSAGE_TYPE enumeration (ntsecapi.h)]].
Some of the documented message IDs are also not correct.
The full and correct list of messages that kerberos supports is provided here:

[%header]
|===
| Id     | Message Type                   | CLI Support        | NT Version | Internal Function
| `0x00` | `DebugRequest`                 | :heavy_minus_sign: | `>=5.0`    | `KerbDebugRequest`
| `0x01` | `QueryTicketCache`             | :heavy_check_mark: | `>=5.0`    | `KerbQueryTicketCache`
| `0x02` | `ChangeMachinePassword`        | :x:                | `>=5.0`    | `KerbChangeMachinePassword`
| `0x03` | `VerifyPac`                    | _Planned_          | `>=5.0`    | `KerbVerifyPac`
| `0x04` | `RetrieveTicket`               | :heavy_check_mark: | `>=5.0`    | `KerbRetrieveTicket`
| `0x05` | `UpdateAddresses`              | :x:                | `>=5.0`    | `KerbSetIpAddresses`
| `0x06` | `PurgeTicketCache`             | :heavy_check_mark: | `>=5.0`    | `KerbPurgeTicket`
| `0x07` | `ChangePassword`               |                    | `>=5.0`    | `KerbChangePassword`
| `0x08` | `RetrieveEncodedTicket`        | :heavy_check_mark: | `>=5.0`    | `KerbRetrieveEncodedTicket`
| `0x09` | `DecryptData`                  | :heavy_minus_sign: | `>=5.0`    | `KerbDecryptMessage`
| `0x0A` | `AddBindingCacheEntry`         | :heavy_check_mark: | `>=5.0`    | `KerbAddBindingCacheEntry`
| `0x0B` | `SetPassword`                  |                    | `>=5.0`    | `KerbSetPassword`
| `0x0C` | `SetPasswordEx`                |                    | `>=5.0`    | `KerbSetPassword`
| `0x0D` | `VerifyCredentials`            | :x:                | `>=5.1`    | `KerbVerifyCredentials`
| `0x0E` | `QueryTicketCacheEx`           | :heavy_check_mark: | `>=5.1`    | `KerbQueryTicketCacheEx`
| `0x0F` | `PurgeTicketCacheEx`           | :heavy_check_mark: | `>=5.1`    | `KerbPurgeTicketEx`
| `0x10` | `RefreshSmartcardCredentials`  |                    | `>=5.2`    | `KerbRefreshSmartcardCredentials`
| `0x11` | `AddExtraCredentials`          | :heavy_check_mark: | `>=5.0`    | `KerbAddExtraCredential`
| `0x12` | `QuerySupplementalCredentials` | :x:                | `>=5.2`    | `KerbQuerySupplementalCredentials`
| `0x13` | `TransferCredentials`          | :heavy_check_mark: | `>=6.0`    | `KerbTransferCredentials`
| `0x14` | `QueryTicketCacheEx2`          | :heavy_check_mark: | `>=6.0`    | `KerbQueryTicketCacheEx2`
| `0x15` | `SubmitTicket`                 |                    | `>=6.0`    | `KerbSubmitTicket`
| `0x16` | `AddExtraCredentialsEx`        | _Planned_          | `>=6.0`    | `KerbAddExtraCredentialEx`
| `0x17` | `QueryKdcProxyCache`           | :heavy_check_mark: | `>=6.2`    | `KerbQueryKdcProxyCache`
| `0x18` | `PurgeKdcProxyCache`           | :heavy_check_mark: | `>=6.2`    | `KerbPurgeKdcProxyCache`
| `0x19` | `QueryTicketCacheEx3`          | :heavy_check_mark: | `>=6.2`    | `KerbQueryTicketCacheEx3`
| `0x1a` | `CleanupMachinePkinitCreds`    | :heavy_check_mark: | `>=6.2`    | `KerbCleanupMachinePkinitCreds`
| `0x1b` | `AddBindingCacheEntryEx`       | :heavy_check_mark: | `>=6.2`    | `KerbAddBindingCacheEntryEx`
| `0x1c` | `QueryBindingCache`            | :heavy_check_mark: | `>=6.2`    | `KerbQueryBindingCache`
| `0x1d` | `PurgeBindingCache`            | :heavy_check_mark: | `>=6.2`    | `KerbPurgeBindingCache`
| `0x1e` | `PinKdc`                       | :heavy_check_mark: | `>=6.2`    | `KerbPinKdc`
| `0x1f` | `UnpinAllKdcs`                 | :heavy_check_mark: | `>=6.2`    | `KerbUnpinAllKdcs`
| `0x20` | `QueryDomainExtendedPolicies`  | :heavy_check_mark: | `>=6.2`    | `KerbQueryDomainExtendedPolicies`
| `0x21` | `QueryS4U2ProxyCache`          | :heavy_check_mark: | `>=6.2`    | `KerbQueryS4U2ProxyCache`
| `0x22` | `RetrieveKeyTab`               | :heavy_check_mark: | `>=10.0`   | `KerbRetrieveKeyTab`
| `0x23` | `RefreshPolicy`                | :heavy_minus_sign: | `>=10.0`   | ?
| `0x24` | `PrintCloudKerberosDebug`      | :heavy_check_mark: | `>=10.0`   | `KerbPrintCloudKerberosDebug`
|===

NOTE: The internal function for each message type will be located in `kerberos.dll`.

Messages `DebugRequest` and `DecryptData` and their internal functions are only available in debug builds of `kerberos.dll`.
The `RefreshPolicy` message is also not available in release builds of `kerberos.dll`, likely due to the same reason, but this could not be confirmed.

=== AddBindingCacheEntry

Add an entry to the binding cache for the machine.

```
kerberos AddBindingCacheEntry --domain-name {name} --dc-address {Inet or NetBIOS address}
```

=== AddBindingCacheEntryEx

Add an entry to the binding cache for the machine.
The `dc-flags` value may be any combination of DC types as described by the DS_* macros in `DsGetDC.h` (ex. 1 for `DS_PDC_FLAG`).

```
kerberos AddBindingCacheEntryEx --domain-name {name} --dc-address {Inet or NetBIOS address} [--dc-flags {value}]
```

=== AddExtraCredentials

Documented in `NTSecApi.h` as adding "server credentials" to a given logon session, only applicable during AcceptSecurityContext, and requiring TCB to alter "other" credentials.
Specifically, during the AcceptSecurityContext for Kerberos an AP-REQ will be checked to be valid and decrypted.
Kerberos will attempt to use any supplied extra credentials in addition to the logon session's primary credentials when attempting to decrypt the AP-REQ.
The command allows a user to add, replace, or remove the additional credential.
The password is not required when removing a credential.

```
kerberos AddExtraCredentials --domain-name {name} --user-name {name} --password {password} [--replace-cred | --remove-cred]
```

=== AddExtraCredentialsEx

Behaves the same as the `AddExtraCredentials` command but allows a user to add a list of "principal names" to the credential.

=== ChangeMachinePassword

The command notifies Kerberos that the password for the machine has changed.
The command will use client supplied pointers to reference LSASS's own memory without checking if the client is LSASS itself.
A client is intended to allocate and reference valid memory in LSASS's own process for the command to succeed.
As such, the command is not currently planned for inclusion in the project.

=== ChangePassword

Changes a user's password in a Windows domain or configured non-Windows Kerberos realm that supports the Kerberos Password Change Protocol.
The caller must know the user's current password to change it.

=== CleanupMachinePkinitCreds

Purge any PKINIT device credentials from the current machine.
`SeTcbPrivilege` is required and the luid must be either 996 (e.g., `NETWORKSERVICE_LUID`) or 999 (e.g., `SYSTEM_LUID`).

```
kerberos CleanupMachinePkinitCreds [--luid {session id}]
```

=== DebugRequest

The `DebugRequest` command is not included with release builds of Windows.
The command originally supported allowing users to issue a breakpoint for a kernel debugger, gather statistics about the kerberos ticket cache, and generate a token for the Administrator user.
Current debug builds of Windows may support additional debug requests.

=== DecryptData

The `DecryptData` command is not included with release builds of Windows.
The original command allowed users to decrypt a buffer with either a specified key or the primary key a logon session.

=== PinKdc

Pin a KDC as described by https://i.blackhat.com/USA-22/Wednesday/US-22-Forshaw-Taking-Kerberos-To-The-Next-Level.pdf[James Forshaw and Nick Landers].
The command cannot be called from WOW64 clients.
The `dc-flags` value may be any combination of DC types as described by the DS_* macros in `DsGetDC.h` (ex. 1 for `DS_PDC_FLAG`).

```
kerberos PinKdc --domain-name {name} --dc-name {name} [--dc-flags {value}]
```

=== PrintCloudKerberosDebug

Get cloud kerberos configuration information.

```
kerberos PrintCloudKerberosDebug
```

=== PurgeBindingCache

Remove all binding cache entries for the machine.
`SeTcbPrivilege` is required.

```
kerberos PurgeBindingCache
```

=== PurgeKdcProxyCache

The `PurgeKdcProxyCache` command has not been fully tested, but should should remove cached KDC proxy tickets.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos PurgeKdcProxyCache [--luid {session id}]
```

=== PurgeTicketCache

Purge tickets in the ticket cache for a logon session.
A server name and realm may be used to filter which tickets should be purged.
The server name and realm must both be specified to be used.
If both are not specified then all tickets will be purged.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos PurgeTicketCache [--luid {session id}] [--server-name {name} --server-realm {name}]
```

=== PurgeTicketCacheEx

Functions the same as the `PurgeTicketCache` but allows you to specify a client name and realm to filter tickets by.
The client name and realm must both be specified to be used.
The command also allows you to explicitly purge all tickets.
If purging all tickets is explicitly specified then all ticket filters will be ignored.

```
kerberos PurgeTicketCacheEx [--luid {session id}] [--all] [--client-name {name} --client-realm {name}] [--server-name {name} --server-realm {name}]
```

=== QueryBindingCache

Get information about the binding cache for the machine.
`SeTcbPrivilege` is required.

```
kerberos QueryBindingCache
```

=== QueryDomainExtendedPolicies

Get the extended policy information for a domain.

```
kerberos QueryDomainExtendedPolicies --domain-name {name}
```

=== QueryKdcProxyCache

The `QueryKdcProxyCache` command has not been fully tested, but should provide information about KDC proxy cached tickets.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos QueryKdcProxyCache [--luid {session id}]
```

=== QuerySupplementalCredentials

Get the TGT and password information for a credential manager blob.
The command will check if the client is LSASS itself.
As such, the command is not currently planned for inclusion in the project.

=== QueryTicketCache

Show the server name, realm name, start time, end time, renew time, encryption type, and flags for each ticket in the ticket cache for the current logon session.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos QueryTicketCache [--luid {session id}]
```

=== QueryTicketCacheEx

Functions the same as the `QueryTicketCache` but will additionally return the client name and realm for each ticket.

```
kerberos QueryTicketCacheEx [--luid {session id}]
```

=== QueryTicketCacheEx2

Functions the same as the `QueryTicketCacheEx` but will additionally return the session key type and branch ID for each ticket.

```
kerberos QueryTicketCacheEx2 [--luid {session id}]
```

=== QueryTicketCacheEx3

Functions the same as the `QueryTicketCacheEx2` but will additionally return the cache flags and KDC name for each ticket.

```
kerberos QueryTicketCacheEx3 [--luid {session id}]
```

=== QueryS4U2ProxyCache

Get the proxy cache information for a service for user (S4U) logon.

```
kerberos QueryS4U2ProxyCache [--luid {session id}]
```

=== RefreshPolicy

The `RefreshPolicy` command is not included with release builds of Windows.
The use of the command is not currently known.

=== RefreshSmartcardCredentials

Notifies Kerberos when the smart card credentials need to be updated.
Implemented to allow the Winlogon session to refresh credentials as needed on terminal server connects and re-connects.

=== RetrieveEncodedTicket

Get a ticket either by querying the ticket cache for the current logon session or by requesting the ticket from the current KDC.
`SeTcbPrivilege` is required to specify another logon session.
If the requested ticket is a TGT, `SeTcbPrivilege` is required to additionally get the session key for the TGT.
If the TGT was obtained when Credential Guard was active, the returned TGT session key will not be valid, making the TGT unusable.

```
kerberos RetrieveEncodedTicket --target-name {server name} [--luid {session id}] [--ticket-flags {value}] [--cache-option {value}] [--enc-type {type}]
```

=== RetrieveKeyTab

Return the keytab data for a domain user.

```
kerberos RetrieveKeyTab --domain-name {name} --user-name {name} --password {password}
```

=== RetrieveTicket

Get the TGT from the ticket cache of the specified user logon session.
`SeTcbPrivilege` is required to additionally get the session key for the TGT.
If the TGT was obtained when Credential Guard was active, the returned TGT session key will not be valid, making the TGT unusable. 

```
kerberos RetrieveTicket --target-name {server name} [--luid {session id}] [--ticket-flags {value}] [--cache-option {value}] [--enc-type {type}]
```

=== SetPassword

Changes a user's password in a Windows domain or configured non-Windows Kerberos realm that supports the Kerberos Password Change Protocol.
The caller does not need to know the user's current password to change it.

=== SetPasswordEx

Behaves the same as the `SetPassword` command but allows a user to specify a client name and realm.

=== SubmitTicket

Adds a supplied ticket to the ticket cache for the current logon session.
`SeTcbPrivilege` is required to specify another logon session.

=== TransferCredentials

Transfer data between two kerberos logon sessions.
The specific data that is transferred and privileges that may be required are still being determined.
The function only accepts the cleanup credentials and optimistic logon flags.

```
kerberos TransferCredentials --sluid {session id} --dluid {session id} [--cleanup-credentials] [--optimistic-logon]
```

=== UpdateAddresses

Updates the IP addresses used by netlogon.
The command will check if the client is LSASS itself.
As such, the command is not currently planned for inclusion in the project.

=== VerifyCredentials

Verify the user name and password for a domain user.
The command will check if the client is LSASS itself.
As such, the command is not currently planned for inclusion in the project.

=== VerifyPac

Verifies that a PAC was signed by a valid KDC.
A client is intended to issue the command using a passthrough request to the KDC and it is the only passthrough command that the kerberos package supports.

=== UnpinAllKdcs

Remove all previously pinned KDCs.

```
kerberos UnpinAllKdcs
```
